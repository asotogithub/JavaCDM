<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:sec="http://www.springframework.org/schema/security" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:property-placeholder />

    <sec:http pattern="/unauthorized" security="none" />
    <sec:http pattern="/loggedout" security="none" />
    <sec:http pattern="/authorizetoken" security="none" />
    <sec:http pattern="/refreshaccesstoken" security="none" />
    <sec:http pattern="/checktoken" security="none" />

    <sec:http auto-config='true'>
        <sec:intercept-url pattern="/accesstoken" access="ROLE_API_FULL_ACCESS" method="POST"/>
        <sec:logout logout-success-url="/loggedout" logout-url="/logout" delete-cookies="JSESSIONID" invalidate-session="true" />
        <sec:http-basic />
        <sec:custom-filter ref="corsFilter" before="FIRST"/>
    </sec:http>

    <bean id="oauthAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="internal" />
    </bean>

    <bean id="clientAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="internal/client" />
        <property name="typeName" value="Basic" />
    </bean>

    <bean id="oauthAccessDeniedHandler"
          class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
                <bean class="org.springframework.security.access.vote.RoleVoter" />
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
            </list>
        </constructor-arg>
    </bean>
    <bean id="passwordEncoder" class="trueffect.truconnect.api.oauth.encoding.ShaPasswordEncoder">
        <constructor-arg value="512"/>
    </bean>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider user-service-ref="apiUserDetailService" >
            <sec:password-encoder ref="passwordEncoder" />
        </sec:authentication-provider>
    </sec:authentication-manager>
    
    <bean id="apiUserDetailService" class="trueffect.truconnect.api.oauth.APIUserDetailsService"/>

    <bean id="corsFilter" class="trueffect.truconnect.api.oauth.filter.CorsFilter"/>

    <bean id="tokenServices"
          class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore" />
        <property name="tokenEnhancer" ref="tokenEnhancer" />
        <property name="supportRefreshToken" value="true" />
        <property name="clientDetailsService" ref="clientDetails"/>
    </bean>

    <bean id="jdbcTemplate" class="trueffect.truconnect.api.oauth.mybatis.JdbcDataSource" />

    <bean id="tokenStore" class="trueffect.truconnect.api.oauth.mybatis.CustomJdbcTokenStore">
        <constructor-arg ref="jdbcTemplate" />
    </bean>
    <bean id="tokenEnhancer"
          class="trueffect.truconnect.api.oauth.APITokenEnhancer" />

    <oauth:authorization-server
        client-details-service-ref="clientDetails" token-services-ref="tokenServices"
        user-approval-handler-ref="userApprovalHandler">
        <oauth:authorization-code />
        <oauth:implicit />
        <oauth:refresh-token />
        <oauth:client-credentials />
        <oauth:password />
    </oauth:authorization-server>
    
    <bean id="userApprovalHandler"
          class="trueffect.truconnect.api.oauth.APIUserApprovalHandler">
        <property name="approvalStore" ref="approvalStore" />
        <property name="clientDetailsService" ref="clientDetails" />
        <property name="requestFactory" ref="requestFactory" />
    </bean>
    
    <bean id="approvalStore"
          class="org.springframework.security.oauth2.provider.approval.TokenApprovalStore">
        <property name="tokenStore" ref="tokenStore" />
    </bean>
    <bean id="requestFactory"
          class="org.springframework.security.oauth2.provider.DefaultOAuth2RequestFactory">
        <constructor-arg name="clientDetailsService" ref="clientDetails" />
    </bean>

    <bean id="oauthController"
          class="trueffect.truconnect.api.oauth.mvc.OauthController">
        <property name="tokenServices" ref="tokenServices" />
        <property name="tokenStore" ref="tokenStore" />
        <property name="userApprovalHandler" ref="userApprovalHandler" />
    </bean>
    <bean id="defaultStartPage"
          class="trueffect.truconnect.api.oauth.mvc.DefaultStartPage">
    </bean>
    <bean id="applicationContextProvider"
          class="trueffect.truconnect.api.oauth.mvc.ApplicationContextProvider">
    </bean>
        
    <oauth:client-details-service id="clientDetails">
        <oauth:client client-id="api-client"
                      authorized-grant-types="password,authorization_code,refresh_token,implicit"
                      authorities="ROLE_CLIENT, ROLE_TRUSTED_CLIENT" scope="read,write,trust"
                      access-token-validity="1800" />
    </oauth:client-details-service>
    
    <mvc:annotation-driven />

    <mvc:default-servlet-handler />

    <!--<sec:custom-filter ref="corsFilter" after="PRE_AUTH_FILTER"/>-->

    <sec:global-method-security
        pre-post-annotations="enabled" proxy-target-class="true">
        <!--		you could also wire in the expression handler up at the layer of the 
        http filters. See https://jira.springsource.org/browse/SEC-1452 -->
        <sec:expression-handler ref="oauthExpressionHandler" />

    </sec:global-method-security>

    <oauth:expression-handler id="oauthExpressionHandler" />

    <oauth:web-expression-handler id="oauthWebExpressionHandler" />

</beans>
